;;
;; Header files for NftItem
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Transfer$_load
(slice, ((int, slice, slice, cell, int, slice))) $Transfer$_load(slice sc_0) inline_ref;

;; $OwnershipAssigned$_store
builder $OwnershipAssigned$_store(builder build_0, (int, slice, slice) v) inline;

;; $OwnershipAssigned$_store_cell
cell $OwnershipAssigned$_store_cell((int, slice, slice) v) inline;

;; $Excesses$_store
builder $Excesses$_store(builder build_0, (int) v) inline;

;; $Excesses$_store_cell
cell $Excesses$_store_cell((int) v) inline;

;; $GetStaticData$_load
(slice, ((int))) $GetStaticData$_load(slice sc_0) inline;

;; $ReportStaticData$_store
builder $ReportStaticData$_store(builder build_0, (int, int, slice) v) inline;

;; $ReportStaticData$_store_cell
cell $ReportStaticData$_store_cell((int, int, slice) v) inline;

;; $NftDeploy$_load
(slice, ((int, int, slice, cell, slice))) $NftDeploy$_load(slice sc_0) inline;

;; $NftItem$_store
builder $NftItem$_store(builder build_0, (int, int, slice, slice, cell) v) inline;

;; $NftItem$_load
(slice, ((int, int, slice, slice, cell))) $NftItem$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $NftData$_to_external
(int, int, slice, slice, cell) $NftData$_to_external(((int, int, slice, slice, cell)) v) inline;

;; $NftItem$init$_load
(slice, ((int, slice))) $NftItem$init$_load(slice sc_0) inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $NftItem$_contract_init
(int, int, slice, slice, cell) $NftItem$_contract_init(int $index, slice $collection) impure inline_ref;

;; $NftItem$_contract_load
(int, int, slice, slice, cell) $NftItem$_contract_load() impure inline_ref;

;; $NftItem$_contract_store
() $NftItem$_contract_store((int, int, slice, slice, cell) v) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $NftData$_constructor_init_index_collection_address_owner_address_individual_content
((int, int, slice, slice, cell)) $NftData$_constructor_init_index_collection_address_owner_address_individual_content(int $init, int $index, slice $collection_address, slice $owner_address, cell $individual_content) inline;

;; $NftItem$_fun_get_nft_data
((int, int, slice, slice, cell), (int, int, slice, slice, cell)) $NftItem$_fun_get_nft_data((int, int, slice, slice, cell) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $NftItem$_fun_forward
((int, int, slice, slice, cell), ()) $NftItem$_fun_forward((int, int, slice, slice, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $NftItem$_fun_notify
((int, int, slice, slice, cell), ()) $NftItem$_fun_notify((int, int, slice, slice, cell) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_body(slice $to, int $value, cell $body) inline;

;; $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload
((int, slice, slice)) $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload(int $query_id, slice $prev_owner, slice $forward_payload) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice $to, int $value, int $mode, cell $body) inline;

;; $Excesses$_constructor_query_id
((int)) $Excesses$_constructor_query_id(int $query_id) inline;

;; $ReportStaticData$_constructor_query_id_index_collection
((int, int, slice)) $ReportStaticData$_constructor_query_id_index_collection(int $query_id, int $index, slice $collection) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
