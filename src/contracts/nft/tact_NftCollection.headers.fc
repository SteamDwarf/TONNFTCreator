;;
;; Header files for NftCollection
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $NftDeploy$_store
builder $NftDeploy$_store(builder build_0, (int, int, slice, cell, slice) v) inline;

;; $NftDeploy$_store_cell
cell $NftDeploy$_store_cell((int, int, slice, cell, slice) v) inline;

;; $NftDeploy$_load
(slice, ((int, int, slice, cell, slice))) $NftDeploy$_load(slice sc_0) inline;

;; $NftCollection$_store
builder $NftCollection$_store(builder build_0, (slice, int, cell) v) inline;

;; $NftCollection$_load
(slice, ((slice, int, cell))) $NftCollection$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $CollectionData$_to_external
(int, cell, slice) $CollectionData$_to_external(((int, cell, slice)) v) inline;

;; $NftItem$init$_store
builder $NftItem$init$_store(builder build_0, (int, slice) v) inline;

;; $NftCollection$init$_load
(slice, ((slice, cell))) $NftCollection$init$_load(slice sc_0) inline;

;; $NftCollection$_contract_init
(slice, int, cell) $NftCollection$_contract_init(slice $owner, cell $content) impure inline_ref;

;; $NftCollection$_contract_load
(slice, int, cell) $NftCollection$_contract_load() impure inline_ref;

;; $NftCollection$_contract_store
() $NftCollection$_contract_store((slice, int, cell) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $NftItem$_init_child
(cell, cell) $NftItem$_init_child(cell sys', int $index, slice $collection) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $CollectionData$_constructor_next_item_index_collection_content_owner_address
((int, cell, slice)) $CollectionData$_constructor_next_item_index_collection_content_owner_address(int $next_item_index, cell $collection_content, slice $owner_address) inline;

;; $NftCollection$_fun_get_collection_data
((slice, int, cell), (int, cell, slice)) $NftCollection$_fun_get_collection_data((slice, int, cell) $self) impure inline_ref;

;; $NftCollection$_fun_get_nft_address_by_index
((slice, int, cell), slice) $NftCollection$_fun_get_nft_address_by_index((slice, int, cell) $self, int $index) impure inline_ref;

;; $NftCollection$_fun_get_nft_content
((slice, int, cell), cell) $NftCollection$_fun_get_nft_content((slice, int, cell) $self, int $index, cell $individual_content) impure inline_ref;

;; $NftCollection$_fun_forward
((slice, int, cell), ()) $NftCollection$_fun_forward((slice, int, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $NftCollection$_fun_notify
((slice, int, cell), ()) $NftCollection$_fun_notify((slice, int, cell) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_data_code_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_data_code_body(slice $to, int $value, int $mode, cell $data, cell $code, cell $body) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
